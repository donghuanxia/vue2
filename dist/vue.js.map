{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val){//判断是否为方法\r\n    return typeof val == 'function'\r\n}\r\n\r\nexport function isObject(val){//判断是否为对象\r\n    return typeof val == 'object'&& val!==null\r\n}\r\n\r\nexport let isArray = Array.isArray//判断是否为数组","let oldArrayPortotype = Array.prototype//获取数组老的原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayPortotype)//让arrayMethods 通过__proto__能获取到数组的方法\r\n// arrayMethods.__proto__ == oldArrayPortotype\r\n// arrayMethods.push = function\r\nlet methods = [//只有这七个方法可以导致数组发生变化\r\n    'push',\r\n    'shift',\r\n    'pop',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function(){\r\n        console.log(method,'数组的方法进行重新操作')\r\n    }\r\n})","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n//原型链指向问题\r\n//1.每个对象都有一个__proto__属性， 它指向所属类的原型  fn.__proto__ = Function.prototype\r\n//2.每个原型上都有一个constructor属性，指向函数本身， Function.prototype.constructor = Function\r\n\r\nclass Observer{\r\n    constructor(value){\r\n        if(isArray(value)){\r\n            //更改数组原型方法\r\n           value.__proto__ = arrayMethods//只重写vue里的七个方法\r\n        }else{\r\n            this.walk(value)//核心就是循环对象\r\n        }\r\n        \r\n    }\r\n    walk(data){\r\n        Object.keys(data).forEach(key=>{//要使用defineProperty重新定义\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n//vue2 应用了defineProperty需要一加载的时候，就进行递归操作， 所以耗性能，如果层次过深也会浪费性能\r\n//1.性能优化的原则\r\n//1)不要把所有的数据都放到data中，因为所有的数据都会增加get和set\r\n//2)不要写数据的时候 层次过深，尽量扁平化数据\r\n//3)不要频繁获取数据\r\n//4)如果数据不需要响应式，可以使用Object.freeze冻结属性\r\nfunction defineReactive(obj,key,value){//vue2慢的原因 主要在这个方法中\r\n    observe(value)\r\n    Object.defineProperty(obj,key,{\r\n        get(){\r\n            return value//闭包，此value 会向上层的value查找\r\n        },\r\n        set(newValue){\r\n            if(value === newValue) return \r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(value){\r\n    //1、如果value不是对象，就不需要观测了，说明写的有问题\r\n    if(!isObject(value)){\r\n        return\r\n    }\r\n    //需要对对象进行观测，最外层必须是一个{}，不能是数组\r\n    //如果一个数据已经被观测过了，就不要在观测了，用类来实现，我观测过就增加一个标识，说明观测过了，在观测时候可以先检测是否观测过\r\n    //如果观测过了就跳过\r\n\r\n    return new Observer(value)\r\n    console.log(value)\r\n}\r\n","import { observe } from \"./observe\"//rollup-plugin-node-resolve 安装这个插件可以自动解析文件夹里的index.js文件\r\nimport { isFunction } from \"./utils\"\r\n\r\nexport function initState(vm){\r\n     const options = vm.$options\r\n     if(options.data){\r\n         //做数据的初始化\r\n         initData(vm)\r\n     }\r\n}\r\n\r\nfunction proxy(vm,key,source){//取值的时候做代理，不是暴力的把_data属性赋予给vm,而且直接赋值会有命名冲突的问题\r\n    \r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key];\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data//用户传入的数据\r\n\r\n    //如果用户传递的是一个函数，则取函数的返回值作为对象，如果就是对象那就直接使用这个对象\r\n    //只有根实例可以data一个对象\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data//判断data 是函数还是对象,_data已经是响应式的了\r\n    //需要将data变成响应式的， Object.defineProperty,重写data的所有属性\r\n    observe(data)//取观测数据，重要，核心模块\r\n    //console.log('222',data)\r\n    //data.arr.push(100)\r\n    //data.arr.pop(100)\r\n    for(let key in data){//vm.message=>vm._data.message\r\n        proxy(vm,key,'_data')\r\n    }\r\n    //vm.message = vm._data.message\r\n}","import { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue){\r\n    //后续组件话开发的时候，Vue.extend可以创造一个子组件，子组件可以继承Vue，子组件也可以调用_init方法\r\n    Vue.prototype._init = function(options){\r\n        const vm = this\r\n        //把用户的选项都放到vm上，这样在其他方法中可以获取到options\r\n        vm.$options = options//为了后续扩展的方法，都可以获取$options选项\r\n        console.log(vm)\r\n        initState(vm)\r\n        if(vm.$options.el){\r\n            //要将数据挂载到页面上\r\n            console.log('页面进行挂载了')\r\n        }\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n//vue 要如何实现， 原型模式， 所有的功能都通过原型扩展的方式添加\r\nfunction Vue(options){\r\n    //实现vue的初始化功能\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\n//导出Vue给别人使用\r\nexport default Vue;\r\n\r\n//1.new Vue 会调用_init方法进行初始化操作\r\n//2.会将用户的选项放到vm.$options上\r\n//3.会对当前属性上搜索有没有data数据 initState\r\n//4.有data 判断data是不是一个函数，如果是函数，取值返回initData\r\n//5.observe 去观测data中的数据"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPortotype","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","Observer","constructor","value","__proto__","walk","data","keys","key","defineReactive","obj","observe","defineProperty","get","set","newValue","initState","vm","options","$options","initData","proxy","source","_data","call","initMixin","Vue","_init","el"],"mappings":"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"}