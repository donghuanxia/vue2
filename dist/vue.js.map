{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["function parserHTML(template){\r\n    console.log(template)    \r\n}\r\nexport function compileToFunction(template){\r\n    //将模板生成ast语法树\r\n    let ast = parserHTML(template)\r\n}","export function isFunction(val){//判断是否为方法\r\n    return typeof val == 'function'\r\n}\r\n\r\nexport function isObject(val){//判断是否为对象\r\n    return typeof val == 'object'&& val!==null\r\n}\r\n\r\nexport let isArray = Array.isArray//判断是否为数组","let oldArrayPortotype = Array.prototype//获取数组老的原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayPortotype)//让arrayMethods 通过__proto__能获取到数组的方法\r\n// arrayMethods.__proto__ == oldArrayPortotype\r\n// arrayMethods.push = function\r\nlet methods = [//只有这七个方法可以导致数组发生变化\r\n    'push',\r\n    'shift',\r\n    'pop',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function(...args){\r\n        //数组新增的属性是不是对象，是对象，继续劫持\r\n        //调用数组的原生逻辑\r\n        oldArrayPortotype[method].call(this,...args)//又有自己的逻辑，又有原来的逻辑，函数切片\r\n        console.log(method,'数组的方法进行重新操作')\r\n        let inserted = null\r\n        let ob = this.__ob__\r\n        switch(method){\r\n            case 'splice'://删除，修改，添加，arr.splice(),第三个参数起为新添加的\r\n                inserted = args.splice(2);//splice方法从第三个参数开始都是新添加的\r\n                break;\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;//调用push 和unshift 传递的参数就是新增的逻辑\r\n                break;\r\n        }\r\n        if(inserted) ob.observeArray(inserted)\r\n    }\r\n})","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n//原型链指向问题\r\n//1.每个对象都有一个__proto__属性， 它指向所属类的原型  fn.__proto__ = Function.prototype\r\n//2.每个原型上都有一个constructor属性，指向函数本身， Function.prototype.constructor = Function\r\n\r\nclass Observer{\r\n    constructor(value){\r\n        //不让__ob__被遍历\r\n        value.__ob__ = this\r\n        Object.defineProperty(value,'__ob__',{\r\n            value:this,\r\n            enumerable:false//表示这个属性不能被列举出来，也就是不能被枚举\r\n        })\r\n        if(isArray(value)){\r\n            //更改数组原型方法\r\n           value.__proto__ = arrayMethods//只重写vue里的七个方法\r\n           this.observeArray(value)\r\n        }else{\r\n            this.walk(value)//核心就是循环对象\r\n        }\r\n        \r\n    }\r\n    observeArray(data){//递归遍历数组，对数组内部的额对象再次重写[[]]\r\n        data.forEach(item=>observe(item))//数组里面如果是引用类型的那么是响应式的\r\n        //vm.arr[0].a = 100//会触发\r\n        //vm.arr[0]=100 不会触发，更改索引不会触发\r\n    }\r\n    walk(data){\r\n        Object.keys(data).forEach(key=>{//要使用defineProperty重新定义\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n//vue2 应用了defineProperty需要一加载的时候，就进行递归操作， 所以耗性能，如果层次过深也会浪费性能\r\n//1.性能优化的原则\r\n//1)不要把所有的数据都放到data中，因为所有的数据都会增加get和set\r\n//2)不要写数据的时候 层次过深，尽量扁平化数据\r\n//3)不要频繁获取数据\r\n//4)如果数据不需要响应式，可以使用Object.freeze冻结属性\r\nfunction defineReactive(obj,key,value){//vue2慢的原因 主要在这个方法中\r\n    observe(value)\r\n    Object.defineProperty(obj,key,{\r\n        get(){\r\n            return value//闭包，此value 会向上层的value查找\r\n        },\r\n        set(newValue){\r\n            if(value === newValue) return \r\n            value = newValue\r\n            console.log('秀嘎')\r\n            observe(newValue)\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(value){\r\n    //1、如果value不是对象，就不需要观测了，说明写的有问题\r\n    if(!isObject(value)){\r\n        return\r\n    }\r\n    if(value.__ob__){\r\n        return//一个对象不需要被重新观测\r\n    }\r\n    //需要对对象进行观测，最外层必须是一个{}，不能是数组\r\n    //如果一个数据已经被观测过了，就不要在观测了，用类来实现，我观测过就增加一个标识，说明观测过了，在观测时候可以先检测是否观测过\r\n    //如果观测过了就跳过\r\n\r\n    return new Observer(value)\r\n    console.log(value)\r\n}\r\n","import { observe } from \"./observe\"//rollup-plugin-node-resolve 安装这个插件可以自动解析文件夹里的index.js文件\r\nimport { isFunction } from \"./utils\"\r\n\r\nexport function initState(vm){\r\n     const options = vm.$options\r\n     if(options.data){\r\n         //做数据的初始化\r\n         initData(vm)\r\n     }\r\n}\r\n\r\nfunction proxy(vm,key,source){//取值的时候做代理，不是暴力的把_data属性赋予给vm,而且直接赋值会有命名冲突的问题\r\n    \r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key];\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data//用户传入的数据\r\n\r\n    //如果用户传递的是一个函数，则取函数的返回值作为对象，如果就是对象那就直接使用这个对象\r\n    //只有根实例可以data一个对象\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data//判断data 是函数还是对象,_data已经是响应式的了\r\n    //需要将data变成响应式的， Object.defineProperty,重写data的所有属性\r\n    observe(data)//取观测数据，重要，核心模块\r\n    //console.log('222',data)\r\n    //data.arr.push(100)\r\n    //data.arr.pop(100)\r\n    for(let key in data){//vm.message=>vm._data.message\r\n        proxy(vm,key,'_data')\r\n    }\r\n    //vm.message = vm._data.message\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue){\r\n    //后续组件话开发的时候，Vue.extend可以创造一个子组件，子组件可以继承Vue，子组件也可以调用_init方法\r\n    Vue.prototype._init = function(options){\r\n        const vm = this\r\n        //把用户的选项都放到vm上，这样在其他方法中可以获取到options\r\n        vm.$options = options//为了后续扩展的方法，都可以获取$options选项\r\n        console.log(vm)\r\n        initState(vm)\r\n        if(vm.$options.el){\r\n            //要将数据挂载到页面上\r\n            //现在数据已经被劫持了，数据变换需更新视图 diff 算法更新需要更新的部分\r\n            //vue -> template（写起来更符合直觉） -> jsx（灵活）\r\n            //vue3-> template写起来性能会更高一些，内部做了很多优化\r\n            //template -> ast语法树（用来描述语法的，描述语法本身的）->描述成一个树结构 -> 将代码重组成js语法\r\n            // 模板编译原理（把template模板编译成render函数->虚拟DOM ->diff算法比对虚拟DOM)\r\n            //ast ->render返回->vnode —》 生成真实DOM\r\n            // 更新的时候再次调用render-》新的vnode ->新旧比对，--》更新真是的dom\r\n            vm.$mount(vm.$options.el)\r\n            console.log('页面进行挂载了')\r\n        }\r\n    },\r\n    Vue.prototype.$mount = function(el){\r\n        const vm = this\r\n        const opts = vm.$options\r\n        el = document.querySelector(el)\r\n        vm.$el = el\r\n        if(!opts.render){\r\n            //模板编译\r\n            let template = opts.template\r\n            if(!template){\r\n                template = el.outerHTML\r\n            }\r\n            let render = compileToFunction(template)\r\n            opts.render = render\r\n        }\r\n    }   \r\n}","import { initMixin } from \"./init\";\r\n\r\n//vue 要如何实现， 原型模式， 所有的功能都通过原型扩展的方式添加\r\nfunction Vue(options){\r\n    //实现vue的初始化功能\r\n    this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\n//导出Vue给别人使用\r\nexport default Vue;\r\n\r\n//1.new Vue 会调用_init方法进行初始化操作\r\n//2.会将用户的选项放到vm.$options上\r\n//3.会对当前属性上搜索有没有data数据 initState\r\n//4.有data 判断data是不是一个函数，如果是函数，取值返回initData\r\n//5.observe 去观测data中的数据 和vm没有关系，说明datayijign 变成了响应式的\r\n//6.vm上像取值也能取到data中的数据vm._data = data 这样用户能取到data 了 vm._data\r\n//7.用户觉得有点麻烦 vm.xx => vm._data.xx\r\n//8.如果更新对象不存在的属性，会导致视图不更新，如果是数组更新索引和长度不会触发更新\r\n//9.如果替换成一个新对象，新对象会被进行劫持，如果是数组存新内容 push unshift() 新增的内容也会被劫持\r\n//通过__ob__进行标识这个对象被监控过， 在(vue 中被监控的对象身上都有一个__ob__这个属性)\r\n//10.如果你就想改变索引 可以使用$set方法， 内部就是splice()\r\n"],"names":["parserHTML","template","console","log","compileToFunction","isFunction","val","isObject","isArray","Array","oldArrayPortotype","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","splice","observeArray","Observer","constructor","value","defineProperty","enumerable","__proto__","walk","data","item","observe","keys","key","defineReactive","obj","get","set","newValue","initState","vm","options","$options","initData","proxy","source","_data","initMixin","Vue","_init","el","$mount","opts","document","querySelector","$el","render","outerHTML"],"mappings":"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"}